{
  "": [
    "--------------------------------------------------------------------------------------------",
    "Copyright (c) Microsoft Corporation. All rights reserved.",
    "Licensed under the MIT License. See License.txt in the project root for license information.",
    "--------------------------------------------------------------------------------------------",
    "Do not edit this file. It is machine generated."
  ],
  "version": "1.0.0",
  "contents": {
    "package": {
      "add.eventListener.breakpoint": "Toggle event listener breakpoints.",
      "add.xhr.breakpoint": "Add XHR/Fetch breakpoint.",
      "attach.node.process": "Attach to Node process.",
      "base.cascadeTerminateToConfigurations.label": "A list of debugging sessions that will also be stopped when this debugging session is terminated.",
      "base.enableDWARF.label": "Toggle whether the debugger will attempt to read DWARF debugging symbols from WebAssembly, which may be resource-intensive. Requires the \"ms-vscode.wasm-dwarf-debugging\" extension to work.",
      "breakpoint.xhr.any": "Any XHR/fetch",
      "breakpoint.xhr.contains": "Interrupt if the URL contains:",
      "browser.address.description": "The IP address or hostname that the debugged browser is listening on.",
      "browser.attach.port.description": "The port to be used for remote debugging of the browser, specified as \"--remote-debugging-port\" when launching the browser.",
      "browser.baseUrl.description": "Base URL is the URL that is used as a reference point for resolving paths in Visual Studio Code. When mapping URLs to the files on disk, the baseURL is trimmed. By default, it is set to the launch URL domain.",
      "browser.browserAttachLocation.description": "Force the browser to attach in a single location. In a remote workspace (such as via SSH or WSL), this can be used to attach the browser on the remote computer instead of locally.",
      "browser.browserLaunchLocation.description": "Force the browser to start in one location. In a remote workspace (such as via SSH or WSL), this can be used to open the browser on the remote machine instead of locally.",
      "browser.cleanUp.description": "What cleanup should be done after the debugging session finishes? Close only the debugged tab or the entire browser.",
      "browser.cwd.description": "Optional working directory for the runtime executable file.",
      "browser.disableNetworkCache.description": "Controls whether to skip the network cache for each request.",
      "browser.env.description": "Optional dictionary of environment key/value pairs for the browser.",
      "browser.file.description": "A local HTML file to open in the browser.",
      "browser.includeDefaultArgs.description": "Determines whether default browser launch arguments (to disable features that may make debugging harder) will be included in the launch.",
      "browser.includeLaunchArgs.description": "Advanced: Specifies whether any default launch/debug arguments are set in the browser. The debugger assumes that the browser will use pipeline debugging, such as that provided with \"--remote-debugging-pipe\".",
      "browser.inspectUri.description": "Format for rewriting inspectUri: It is a template string that interpolates keys in {curlyBraces}. Available keys are:\n - \"url.*\" is the parsed address of the running application. For example, {url.port}, {url.hostname}.\n - \"port\" is the debugging port that Chrome is listening on.\n - \"browserInspectUri\" is the inspector URI in the launched browser.\n - \"browserInspectUriPath\" is the path part of the inspector URI in the launched browser (e.g. /devtools/browser/e9ec0098-306e-472a-8133-5e42488929c2).\n - \"wsProtocol\" is the suggested WebSocket protocol. It is set to wss if the original URL starts with https, otherwise ws.",
      "browser.launch.port.description": "The port on which the browser listens. The default value of 0 will cause the browser to be debugged through channels, which is generally a safer option and is recommended unless you need to connect to the browser from another tool.",
      "browser.pathMapping.description": "A mapping of URLs/paths to local folders, to resolve scripts in the Browser to scripts on disk.",
      "browser.perScriptSourcemaps.description": "Specifies whether scripts are loaded individually with unique sourcemaps containing the base name of the source file. This option can be set to optimize sourcemap processing when working with a large number of small scripts. If set to \"auto\", known cases will be detected where this processing is appropriate.",
      "browser.profileStartup.description": "If the value is true, profiling will start as soon as the process is launched.",
      "browser.restart": "Specifies whether to reconnect if the browser connection is closed.",
      "browser.revealPage": "Switch focus to tab",
      "browser.runtimeArgs.description": "Optional arguments passed to the runtime executable.",
      "browser.runtimeExecutable.description": "Either 'canary', 'stable', 'custom' or path to the browser executable.\n",
      "browser.runtimeExecutable.edge.description": "It can have a value of \"canary\", \"stable\", \"dev\", \"custom\", or the path to the browser executable. The option \"custom\" refers to a custom wrapper, custom build, or EDGE_PATH environment variable.",
      "browser.server.description": "Configures a web server to start up. Takes the same configuration as the 'node' launch task.",
      "browser.skipFiles.description": "An array of file or folder names or path globs to skip during debugging. Star patterns and negations are allowed, for example: [\"**/node_modules/**\", \"!**/node_modules/my-module/**\"].",
      "browser.smartStep.description": "Automatically step through unmapped lines in sourcemap files. For example, code that TypeScript automatically generates during the compilation of async/await or other features.",
      "browser.sourceMapPathOverrides.description": "A set of mappings for rewriting the locations of source files from the locations indicated by the sourcemap to their respective locations on the disk. See the README file for details.",
      "browser.sourceMapRenames.description": "Specifies whether to use the \"names\" mapping in source maps. This requires requesting source content, which may be slow with certain debuggers.",
      "browser.sourceMaps.description": "Use JavaScript source maps (if available).",
      "browser.targetSelection": "Specifies whether to attach to all targets that match the URL address filter (\"automatic\") or prompt for selection of one (\"pick\").",
      "browser.timeout.description": "Retry for this number of milliseconds to connect to the browser. Default is 10000 ms.",
      "browser.url.description": "Will search for a tab with this exact URL and attach to it, if found.",
      "browser.urlFilter.description": "It will search for a page with this URL and attach to it if found. It may contain wildcard characters *.",
      "browser.userDataDir.description": "By default, the browser is launched with a separate user profile in a temporary folder. Use this option to override it. Set it to false to launch with your default user profile. A new browser cannot be launched if an instance is already running from 'userDataDir'.",
      "browser.vueComponentPaths": "A list of file glob patterns for finding '*.vue' components. By default, it searches the entire workspace. This needs to be specified due to additional searches required by Vue source maps in Vue CLI 4. You can disable this special handling by setting it to an empty array.",
      "browser.webRoot.description": "This specifies the absolute workspace path to the root directory of the web server. It is used to resolve file paths on disk, such as '/app.js'. Shortcut for pathMapping for \"/\".\n",
      "chrome.attach.description": "Attach to an instance of Chrome that is already in debug mode",
      "chrome.attach.label": "Chrome: attach",
      "chrome.label": "Web application (Chrome)",
      "chrome.launch.description": "Launch Chrome to debug a URL",
      "chrome.launch.label": "Chrome: Start",
      "commands.callersAdd.label": "Exclude the caller",
      "commands.callersAdd.paletteLabel": "Exclude the caller from pausing at the current location",
      "commands.callersGoToCaller.label": "Go to the caller's location",
      "commands.callersGoToTarget.label": "Accéder à l’emplacement cible",
      "commands.callersRemove.label": "Remove the excluded caller.",
      "commands.callersRemoveAll.label": "Remove all excluded callers.",
      "commands.disableSourceMapStepping.label": "Disable source mapped stepping.",
      "commands.enableSourceMapStepping.label": "Enable source mapped stepping.",
      "configuration.autoAttachMode": "It configures which processes to automatically attach and debug when the '#debug.node.autoAttach#' setting is enabled. A Node process launched with the '--inspect' flag will always be attached regardless of this setting.",
      "configuration.autoAttachMode.always": "Automatically attach to every Node.js process launched in the terminal.",
      "configuration.autoAttachMode.disabled": "Auto attach is disabled and not shown in the status bar.",
      "configuration.autoAttachMode.explicit": "Only attach when the `--inspect` parameter is provided.",
      "configuration.autoAttachMode.smart": "Automatically attach when running scripts that are not in the node_modules folder.",
      "configuration.autoAttachSmartPatterns": "Configures glob patterns to determine when to attach in \"smart\" #debug.javascript.autoAttachFilter# mode. $KNOWN_TOOLS$ is replaced with a list of common test and code runners. [Read more in the VS Code documentation](https://code.visualstudio.com/docs/nodejs/nodejs-debugging#_auto-attach-smart-patterns).",
      "configuration.automaticallyTunnelRemoteServer": "When debugging a remote web app, configures whether to automatically tunnel the remote server to your local machine.",
      "configuration.breakOnConditionalError": "Specifies whether to stop when conditional breakpoints cause an error.",
      "configuration.debugByLinkOptions": "Options used when debugging open links clicked from inside the debug terminal. It can be set to \"false\" to disable this behavior.",
      "configuration.defaultRuntimeExecutables": "The default value of \"runtimeExecutable\" used for launch configurations if not specified. This can be used to configure custom paths to Node.js or browser installations.",
      "configuration.npmScriptLensLocation": "The \"Run\" and \"Debug\" code lens can be shown in different locations in your npm scripts: \"all\" scripts, on \"top\" of the script section, or \"never\".",
      "configuration.pickAndAttachOptions": "The default options used when debugging a process using the \"Debug: Attach to Node.js Process\" command",
      "configuration.resourceRequestOptions": "The options to use when loading resources, such as source maps, in the debugger. You may need to configure this if your source maps require authentication or use a self-signed certificate, for example. The options are used to create a request using the [`got`](https://github.com/sindresorhus/got) library.\n\nA common way to disable certificate verification is by passing `{ \"https\": { \"rejectUnauthorized\": false } }`.",
      "configuration.terminalOptions": "Default launch options for the JavaScript debug terminal and npm scripts.",
      "configuration.unmapMissingSources": "Configures whether the sourcemapped file will be automatically unmapped when the original file cannot be read. If this value is false (default), a prompt will be displayed.",
      "createDiagnostics.label": "Diagnose breakpoint problems.",
      "customDescriptionGenerator.description": "Customize the textual description displayed by the debugger for objects (local variables, etc.). Examples:\n1. this.toString() // will call toString to print all objects.\n2. this.customDescription ? this.customDescription() : defaultValue // Use the customDescription method if available, otherwise return the defaultValue.\n3. function (def) { return this.customDescription ? this.customDescription() : def } // Use the customDescription method if available, otherwise return the defaultValue.",
      "customPropertiesGenerator.description": "It allows customizing the properties displayed for an object in the debugger (local variables, etc.). Examples:\n    1. { ...this, extraProperty: '12345' } // Add extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use the customProperties method if available, otherwise use the properties in this (default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use the customDescription method if available, otherwise return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the manner described here: https://github.com/microsoft/vscode/issues/102181.",
      "debug.npm.edit": "Edit package.json.",
      "debug.npm.noScripts": "No npm scripts were found in your package.json file.",
      "debug.npm.noWorkspaceFolder": "To debug npm scripts, you need to open a workspace folder.",
      "debug.npm.parseError": "Unable to read {0}: {1}",
      "debug.npm.script": "Debugging an NPM script",
      "debug.terminal.attach": "Attach to Node.js terminal process.",
      "debug.terminal.label": "JavaScript Debug Terminal",
      "debug.terminal.program.description": "Command to run in the launched terminal. If not provided, the terminal will open without launching a program.",
      "debug.terminal.snippet.label": "Run \"npm start\" in a debug terminal.",
      "debug.terminal.toggleAuto": "Toggle automatic attachment of Node.js terminal.",
      "debug.terminal.welcome": "You can use the JavaScript Debug Terminal to debug Node.js processes running on the command line.",
      "debug.terminal.welcomeWithLink": "You can use the JavaScript Debug Terminal to debug Node.js processes running on the command line.",
      "debug.unverifiedBreakpoints": "Some of your breakpoints could not be set. If you have a problem, you can troubleshoot your launch configuration.",
      "debugLink.label": "Open link.",
      "edge.address.description": "The IP address or hostname that the web view is listening to when debugging web views. If not set, it will be automatically detected.",
      "edge.attach.description": "Attach to an instance of Edge already in debug mode",
      "edge.attach.label": "Edge: Attach",
      "edge.label": "Web application (Edge)",
      "edge.launch.description": "Launch Microsoft Edge to debug a URL",
      "edge.launch.label": "Edge: launch",
      "edge.port.description": "The port on which the web view debugger listens when debugging web views. It will be automatically detected if not set.",
      "edge.useWebView.attach.description": "An object containing the 'pipeName' of a debugging pipe for a Webview2 hosted on UWP. This is \"MyTestSharedMemory\" when creating the pipe \"\\\\.\\pipe\\LOCAL\\MyTestSharedMemory\".",
      "edge.useWebView.launch.description": "When set to true, the debugger will treat the runtime executable file as a host application that contains a WebView, allowing you to debug the content of the WebView script.",
      "edit.xhr.breakpoint": "Edit XHR/fetch breakpoint",
      "enableContentValidation.description": "Specifies whether to verify that the contents of files on disk match those loaded at runtime. This is useful in various scenarios and required in some, but can also cause issues, such as when server-side script transformations are applied.",
      "errors.timeout": "{0}: Timeout after {1}ms.",
      "extension.description": "An extension for debugging Node.js programs and Chrome.",
      "extensionHost.label": "VS Code extension development",
      "extensionHost.launch.config.name": "Start the extension.",
      "extensionHost.launch.debugWebWorkerHost": "Configures whether we should attempt to attach to the web worker extension host.",
      "extensionHost.launch.debugWebviews": "Configure whether we should attempt to attach to web views in the running instance of VS Code. This will only work in Desktop VS Code.",
      "extensionHost.launch.env.description": "Environment variables passed to the extension host.",
      "extensionHost.launch.rendererDebugOptions": "Options for launching Chrome that are used when attaching to the renderer process with \"debugWebviews\" or \"debugWebWorkerHost\".",
      "extensionHost.launch.runtimeExecutable.description": "Absolute path to VS Code.",
      "extensionHost.launch.stopOnEntry.description": "Automatically stop the extension host after launch.",
      "extensionHost.launch.testConfiguration": "Path to a test configuration file for the test CLI.",
      "extensionHost.launch.testConfigurationLabel": "One configuration to run from file. If not specified, you may be prompted to choose.",
      "extensionHost.snippet.launch.description": "Start a VS Code extension in debug mode.",
      "extensionHost.snippet.launch.label": "VS Code extension development",
      "getDiagnosticLogs.label": "Save diagnostic JS debug logs.",
      "longPredictionWarning.disable": "Do not show again",
      "longPredictionWarning.message": "Configuring breakpoints is taking some time. You can speed it up by updating the 'outFiles' attribute in the launch.json file.",
      "longPredictionWarning.noFolder": "No workspace folder is open.",
      "longPredictionWarning.open": "Open the launch.json file.",
      "node.address.description": "The TCP/IP address of the process to be debugged is 'localhost' by default.",
      "node.attach.attachExistingChildren.description": "Whether to attempt to attach to already-spawned child processes.",
      "node.attach.attachSpawnedProcesses.description": "Whether to set environment variables in the attached process to track spawned children.",
      "node.attach.config.name": "Attach",
      "node.attach.continueOnAttach": "If enabled, programs launched with `--inspect-brk` will automatically be resumed.",
      "node.attach.processId.description": "Process ID to which to attach.",
      "node.attach.restart.description": "It allows you to attempt to reconnect to the program in case of connection loss. If set to true, reconnection attempts will be made once per second indefinitely. You can customize the interval and maximum number of attempts by specifying the values for delay and maxAttempts in an object.",
      "node.attachSimplePort.description": "If set, it attaches to the process via the specified port. This is generally no longer necessary for Node.js programs and loses the ability to debug child processes, but it may be useful in some unusual scenarios, such as Deno and Docker launches. If set to 0, a random port will be chosen and --inspect-brk will be automatically added to the launch arguments.",
      "node.console.title": "Node Debugging Console",
      "node.disableOptimisticBPs.description": "Do not set breakpoints in any file until a sourcemap is loaded for that file.",
      "node.enableTurboSourcemaps.description": "Configures whether to use a new, faster mechanism for source map discovery.",
      "node.killBehavior.description": "Configure how debugging processes are terminated when the session is stopped. Possible options are:\n\n- forceful (default): Forces the termination of the process tree. Sends SIGKILL in POSIX or `taskkill.exe /F` in Windows.\n- polite: Terminates the process tree gracefully. It is possible that processes with improper behavior will continue to run after being shut down in this way. Sends SIGTERM in POSIX or `taskkill.exe` without the `/F` (force) flag in Windows.\n- none: No termination will occur.",
      "node.label": "Node.js, Node.js, Node.js, Node.js, Node.js, Node.js, Node.js, Node.js, Node.js, Node.js, Node.js, Node.js, Node.js, Node.js, Node.js",
      "node.launch.args.description": "Command-line arguments passed to the program.\n\nIt can be an array of strings or a single string. When the program is launched in a terminal, setting this property to a single string will cause the arguments not to be escaped for the shell.",
      "node.launch.autoAttachChildProcesses.description": "Automatically attach the debugger to new child processes.",
      "node.launch.config.name": "Start",
      "node.launch.console.description": "Where to launch the debugging target.",
      "node.launch.console.externalTerminal.description": "External terminal that can be configured through user settings.",
      "node.launch.console.integratedTerminal.description": "VS Code's integrated terminal.",
      "node.launch.console.internalConsole.description": "VS Code debugging console (which does not support reading input from a program)",
      "node.launch.cwd.description": "The absolute path to the working directory of the debugged program. If you have set localRoot, cwd will match that value; otherwise, it will fallback to your workspaceFolder.",
      "node.launch.env.description": "Environment variables passed to the program. The value 'null' removes the variable from the environment.",
      "node.launch.envFile.description": "Absolute path to a file containing environment variable definitions.",
      "node.launch.logging": "Logging configuration",
      "node.launch.logging.cdp": "Path to the log file for Chrome DevTools Protocol messages",
      "node.launch.logging.dap": "Path to the log file for Debug Adapter Protocol messages.",
      "node.launch.outputCapture.description": "Specifies where output messages should be captured: default debug API if set to 'console', or stdout/stderr streams if set to 'std'.",
      "node.launch.program.description": "Absolute path to the program. The generated value is estimated based on the package.json file and open files. Edit this attribute.",
      "node.launch.restart.description": "Try restarting the program if it exits with a non-zero exit code.",
      "node.launch.runtimeArgs.description": "Optional arguments passed to the runtime executable file.",
      "node.launch.runtimeExecutable.description": "The runtime to be used. Absolute path or name of a runtime available in PATH. If omitted, \"node\" is assumed.",
      "node.launch.runtimeSourcemapPausePatterns": "A list of patterns for manually inserting breakpoints at entry points. This can be useful to allow the debugger to set breakpoints when using source mappings that do not exist or cannot be detected before launch, such as [with the Serverless Framework](https://github.com/microsoft/vscode-js-debug/issues/492).",
      "node.launch.runtimeVersion.description": "The version of the 'node' runtime to be used. Requires 'nvm'.",
      "node.launch.useWSL.deprecation": "The 'useWSL' extension is deprecated and will no longer be supported. Please use the 'Remote - WSL' extension instead.",
      "node.launch.useWSL.description": "Use the Windows Subsystem for Linux.",
      "node.localRoot.description": "Path to the local directory containing the program.",
      "node.pauseForSourceMap.description": "Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.",
      "node.port.description": "The port for debugging to which the attachment is to be made. The default value is 9229.",
      "node.processattach.config.name": "Attach to process.",
      "node.profileStartup.description": "If the value is true, profiling will start when the process is launched.",
      "node.remote.host.header.description": "Explicit host header to be used when connecting to the inspector's websocket. If not specified, the host header will be set to \"localhost\". This is useful when the inspector is running behind a proxy that only accepts a specific host header.",
      "node.remoteRoot.description": "Absolute path to the remote directory containing the program.",
      "node.resolveSourceMapLocations.description": "A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.",
      "node.showAsyncStacks.description": "Display the asynchronous calls that led to the current call stack.",
      "node.snippet.attach.description": "Attach to a running Node program.",
      "node.snippet.attach.label": "Node.js: Attach",
      "node.snippet.attachProcess.description": "Open the process picker to select the Node process to attach to.",
      "node.snippet.attachProcess.label": "Node.js: attach to process",
      "node.snippet.electron.description": "Debug the main Electron process.",
      "node.snippet.electron.label": "Node.js: Electron main process",
      "node.snippet.gulp.description": "Debug the Gulp task (make sure you have a local Gulp installed in your project)",
      "node.snippet.gulp.label": "Node.js: Gulp task",
      "node.snippet.launch.description": "Start a Node program in debug mode.",
      "node.snippet.launch.label": "Node.js: Start the program.",
      "node.snippet.mocha.description": "Debug Mocha tests.",
      "node.snippet.mocha.label": "Node.js: Mocha tests",
      "node.snippet.nodemon.description": "Use nodemon to restart a debugging session on source changes.",
      "node.snippet.nodemon.label": "Node.js: Nodemon setup.",
      "node.snippet.npm.description": "To start a Node program using the npm script \"debug\",",
      "node.snippet.npm.label": "Node.js: Start via npm",
      "node.snippet.remoteattach.description": "Attach to the debug port of a remote node program.",
      "node.snippet.remoteattach.label": "Node.js: Connect to a remote program",
      "node.snippet.yo.description": "Debug the Yeoman generator (install by running 'npm link' in the project folder).",
      "node.snippet.yo.label": "Node.js: Yeoman generator",
      "node.sourceMapPathOverrides.description": "A set of mappings to rewrite the locations of source files from what the sourcemap says to their locations on disk.",
      "node.sourceMaps.description": "Use JavaScript source maps (if available).",
      "node.stopOnEntry.description": "After starting, the program will automatically stop.",
      "node.timeout.description": "The connection retries to Node.js will be attempted for this number of milliseconds. The default value is 10000 ms.",
      "node.versionHint.description": "It allows you to explicitly specify the running version of Node, which can be used to disable or enable certain behaviors in cases where automatic version detection is not working.",
      "node.websocket.address.description": "The exact WebSocket address to which to attach. If not specified, it will be discovered from the address and port.",
      "openEdgeDevTools.label": "Open the browser's developer tools.",
      "outFiles.description": "If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with '!', the files are excluded. If not specified, the generated code is expected to be in the same directory as its source.",
      "pretty.print.script": "Pretty print for debugging",
      "profile.start": "Use performance profile.",
      "profile.stop": "Stop performance profile.",
      "remove.eventListener.breakpoint.all": "Remove all event listener breakpoints.",
      "remove.xhr.breakpoint": "Remove XHR/fetch breakpoint.",
      "remove.xhr.breakpoint.all": "Remove all XHR/Fetch breakpoints.",
      "requestCDPProxy.label": "Request CDP proxy for debugging session",
      "skipFiles.description": "An array of glob patterns for files to skip during debugging. The pattern \"<node_internals>/**\" matches all internal Node.js modules.",
      "smartStep.description": "Automatic stepping through the generated code, which cannot be mapped back to the original source, will be performed.",
      "start.with.stop.on.entry": "Start debugging and stop at the entry",
      "startWithStopOnEntry.label": "Start debugging and stop at the entry",
      "timeouts.generalDescription": "Timeout for several debugger operations.",
      "timeouts.generalDescription.markdown": "Timeout for several debugger operations.",
      "timeouts.hoverEvaluation.description": "The time until the evaluation of the value for hovered symbols is interrupted. If set to 0, the evaluation for hovering will never time out.",
      "timeouts.sourceMaps.description": "Timeouts related to source mapping operations.",
      "timeouts.sourceMaps.sourceMapCumulativePause.description": "Additional time (in milliseconds) allowed per session to wait for processing source mappings after the minimum time (sourceMapMinPause) is exhausted.",
      "timeouts.sourceMaps.sourceMapMinPause.description": "Minimum time (in milliseconds) spent waiting for processing each source mapping when parsing a script.",
      "toggle.skipping.this.file": "Toggle Skip This File",
      "trace.boolean.description": "Trace can be set to 'true' in order to write diagnostic logs to the disk.",
      "trace.description": "Configures what diagnostic output is produced.",
      "trace.logFile.description": "Configures where on disk logs are written.",
      "trace.stdio.description": "Specifies whether to return tracing data from the launched application or browser.",
      "workspaceTrust.description": "Trust is required to debug code in this workspace."
    },
    "bundle": {
      "A profiling session is already running, would you like to stop it and start a new session?": "Profiling session is already running. Would you like to stop it and start a new session?",
      "Add XHR Breakpoint": "Add XHR breakpoint.",
      "Add new URL...": "Add new URL...",
      "Adjust glob pattern(s) in the 'outFiles' attribute so that they cover the generated JavaScript.": "Adjust the glob patterns in the 'outFiles' attribute to cover the generated JavaScript.",
      "Always": "Always",
      "Always in this Workspace": "Always in this workspace.",
      "An error occurred taking a profile from the target.": "An error occurred while retrieving a profile from the target.",
      "Animation Frame Fired": "Animation frame triggered",
      "Any XHR or fetch": "Any XHR or fetch",
      "Assertion failed": "Assertion failed.",
      "Attach to process: '{0}' doesn't look like a process id.": "Attaching to process: '{0}' does not seem like a process ID.",
      "Attach to process: cannot enable debug mode for process '{0}' ({1}).": "Attaching to process: Unable to enable debug mode for process '{0}' ({1}).",
      "Attribute 'runtimeVersion' requires Node.js version manager 'nvm-windows' or 'nvs'.": "The 'runtimeVersion' attribute requires the Node.js version manager 'nvm-windows' or 'nvs'.",
      "Attribute 'runtimeVersion' requires Node.js version manager 'nvs', 'nvm' or 'fnm' to be installed.": "The \"runtimeVersion\" attribute requires the installation of the Node.js version manager \"nvs\", \"nvm\", or \"fnm\".",
      "Attribute 'runtimeVersion' with a flavor/architecture requires 'nvs' to be installed.": "The 'runtimeVersion' attribute with a variant/architecture requires the installation of 'nvs'.",
      "Bidder Bidding Phase Start": "Commencement of bidder bidding phase.",
      "Bidder Reporting Phase Start": "Start of the bidder reporting phase.",
      "Block": "Block",
      "Break when URL Contains": "Interrupt when the URL contains:",
      "Breaks on all throw errors, even if they're caught later.": "It pauses on all thrown errors, even if they are caught later.",
      "Breaks only on errors or promise rejections that are not handled.": "It only breaks on errors or promise rejections that are not handled.",
      "Browser connection failed, will retry: {0}": "Browser connection failed, retrying: {0}",
      "CPU Profile": "CPU profile",
      "CPU profile saved as \"{0}\" in your workspace folder": "The CPU profile has been saved as \"{0}\" in your workspace folder.",
      "CSP violation \"{0}\"": "CSP violation \"{0}\"",
      "Can't find Node.js binary \"{0}\": {1}. Make sure Node.js is installed and in your PATH, or set the \"runtimeExecutable\" in your launch.json": "Unable to find Node.js binary file \"{0}\": {1}. Make sure Node.js is installed and listed in the PATH variable, or set \"runtimeExecutable\" in the launch.json file.",
      "Can't load environment variables from file ({0}).": "Unable to load environment variables from file ({0}).",
      "Cancel Animation Frame": "Cancel animation frame",
      "Cannot connect to the target at {0}: {1}": "Unable to connect to target: {0}: {1}",
      "Cannot find `{0}` installed in {1}": "Unable to find '{0}' installed in {1}.",
      "Cannot find a program to debug": "Unable to find a program to debug.",
      "Cannot find test configuration with label `{0}`, got: {1}": "Failed to find test configuration with label {0}, received: {1}.",
      "Cannot launch debug target in terminal ({0}).": "Unable to start debug target in terminal ({0}).",
      "Cannot restart asynchronous frame": "Unable to restart an asynchronous frame.",
      "Cannot set an empty value": "Cannot set an empty value.",
      "Catch Block": "Catch block",
      "Caught Exceptions": "Caught Exceptions",
      "Close AudioContext": "Close AudioContext.",
      "Closure": "Closure",
      "Closure ({0})": "Closing ({0})",
      "Console profile started": "Console profile started.",
      "Could not connect to any UWP Webview pipe. Make sure your webview is hosted in debug mode, and that the `pipeName` in your `launch.json` is correct.": "Unable to connect to any UWP Webview pipe. Ensure that your Webview is hosted in debugging mode and that the \"pipeName\" in your \"launch.json\" file is correct.",
      "Could not query the provided object": "Failed to query the provided object.",
      "Could not read source map for {0}: {1}": "Failed to read the source mapping for {0}: {1}",
      "Could not read {0}: {1}": "Unable to read {0}: {1}",
      "Create AudioContext": "Create AudioContext.",
      "Create canvas context": "Create canvas context",
      "Debug Anyway": "Debug anyway",
      "Debug URL": "Debug the URL.",
      "Details": "Details",
      "Don't show again": "Do not show again",
      "Duration": "Duration",
      "Duration of Profile": "Profile duration",
      "Edit XHR Breakpoint": "Edit XHR breakpoint.",
      "Edit package.json": "Edit package.json.",
      "Enables Node.js [auto attach]({0}) debugging in \"{1}\" mode/{Locked='[auto attach]({0})'}the 2nd placeholder is the setting value": "Enables Node.js debugging [auto attach]({0}) in \"{1}\" mode.",
      "Enter a URL or a pattern to match": "Enter a URL or pattern to match.",
      "Eval": "Evaluation, Auswertung, Evaluation, Evaluation, Valuation, Evaluation, Evaluation, Calculation, Evaluation, Evaluation, Оценка, Evaluation, Evaluation, Evaluation",
      "Frame could not be restarted": "The frame failed to restart.",
      "Generates a .cpuprofile file you can open in VS Code or the Edge/Chrome devtools": "It generates a .cpuprofile file that you can open in VS Code or in Edge/Chrome DevTools.",
      "Generates a .heapprofile file you can open in VS Code or the Edge/Chrome devtools": "It generates a .heapprofile file that you can open in VS Code or Edge/Chrome DevTools.",
      "Generates a .heapsnapshot file you can open in VS Code or the Edge/Chrome devtools": "It generates a .heapsnapshot file that you can open in VS Code or Edge/Chrome DevTools.",
      "Global": "Global",
      "Globals": "Global",
      "Got it!": "Understood!",
      "Heap Profile": "Heap profile",
      "Heap Snapshot": "Heap snapshot",
      "How long to run the profile": "How long should the profile be run?",
      "Ignore": "Ignore",
      "Installation complete! The extension will be used after you restart your debug session.": "Installation complete! The extension will be used after restarting the debug session.",
      "Installing the DWARF debugger...": "Installing the DWARF debugger...",
      "Invalid expression": "Invalid expression",
      "Invalid hit condition \"{0}\". Expected an expression like \"> 42\" or \"== 2\".": "Invalid hit condition \"{0}\". An expression like \"> 42\" or \"== 2\" was expected.",
      "It looks like a browser is already running from {0}. Please close it before trying to debug, otherwise VS Code may not be able to connect to it.": "It appears that a browser is already running from {0}. Please close it before attempting to debug, otherwise VS Code may not be able to connect to it.",
      "It looks like your debug session has already ended. Try debugging again, then run the \"Debug: Diagnose Breakpoint Problems\" command.": "It looks like your debugging session has already ended. Please try debugging again, and then run the command \"Debug: Diagnose Breakpoint Problems\".",
      "It's taking a while to configure your breakpoints. You can speed this up by updating the 'outFiles' in your launch.json.": "Configuring breakpoints is taking some time. You can speed it up by updating the 'outFiles' attribute in the launch.json file.",
      "JavaScript Debug Terminal": "JavaScript Debug Terminal",
      "JavaScript debug adapter": "JavaScript Debug Adapter",
      "Launch Chrome against localhost": "Launch Chrome against localhost.",
      "Launch Edge against localhost": "Launch Microsoft Edge against localhost.",
      "Launch Program": "Start the program",
      "Launch configuration created based on 'package.json'.": "Start the configuration created based on the \"package.json\" file.",
      "Launch configuration for '{0}' project created.": "Started configuration for the created project \"{0}\".",
      "Local": "Local",
      "Locals": "Local variables",
      "Lost connection to debugee, reconnecting in {0}ms\r\n": "Connection to the debug target was lost. Attempting to reconnect in {0} ms.",
      "Manual": "Manual",
      "Module": "Module",
      "Never": "Never",
      "No": "No",
      "No npm scripts found in your package.json": "No npm scripts were found in your package.json file.",
      "No package.json files found in your workspace.": "No package.json files were found in your workspace.",
      "No workspace folder open.": "No workspace folder is open.",
      "Node.js version '{0}' not installed using version manager {1}.": "Node.js version '{0}' was not installed using version manager '{1}'.",
      "Not Now": "Not now.",
      "Only objects can be queried": "Queries can only be made on objects.",
      "Open launch.json": "Open the launch.json file.",
      "Output has been truncated to the first {0} characters. Run `{1}` to copy the full output.": "The output has been truncated to the first {0} characters. Run '{1}' to copy the complete output.",
      "Parameters": "Parameters",
      "Paused": "Paused",
      "Paused before Out Of Memory exception": "Paused before out of memory exception.",
      "Paused on Content Security Policy violation instrumentation breakpoint, directive \"{0}\"": "Paused at a content security policy (CSP) violation instrumentation breakpoint. Directive: \"{0}\".",
      "Paused on DOM breakpoint": "Paused at a DOM breakpoint.",
      "Paused on WebGL Error instrumentation breakpoint, error \"{0}\"": "Paused at WebGL error instrumentation breakpoint. Error: \"{0}\".",
      "Paused on XMLHttpRequest or fetch": "Suspended on XMLHttpRequest or fetch",
      "Paused on assert": "Paused at an assertion.",
      "Paused on breakpoint": "Paused at breakpoint.",
      "Paused on debug() call": "Paused on debug() call.",
      "Paused on debugger statement": "Paused at a debugger statement.",
      "Paused on event listener": "Paused at event listener.",
      "Paused on event listener breakpoint \"{0}\", triggered on \"{1}\"": "Paused at event listener breakpoint \"{0}\", triggered at \"{1}\".",
      "Paused on exception": "Paused on exception",
      "Paused on frame entry": "Paused at frame entry",
      "Paused on instrumentation breakpoint": "Paused at an instrumentation breakpoint.",
      "Paused on instrumentation breakpoint \"{0}\"": "Suspended at instrumentation breakpoint \"{0}\".",
      "Paused on {0}": "Paused at: {0}",
      "Pick Breakpoint": "Select breakpoint",
      "Pick the node.js process to attach to": "Select the node.js process to attach to.",
      "Please enter a number": "Please enter a number.",
      "Please enter a number greater than 1": "Please enter a number greater than 1.",
      "Please stop the running profile before starting a new one.": "Please stop the running profile before starting a new one.",
      "Process picker failed ({0})": "Process picker selection failed ({0})",
      "Profile duration in seconds, e.g \"5\"": "Profile duration in seconds, for example \"5\"",
      "Profiling": "Profiling",
      "Profiling with breakpoints enabled can change the performance of your code. It can be useful to validate your findings with the \"duration\" or \"manual\" termination conditions.": "Profiling with enabled breakpoints can impact the performance of your code. It can be useful to validate your findings with the termination conditions \"duration\" or \"manual\".",
      "Read More": "Read more",
      "Request Animation Frame": "Request animation frame.",
      "Resume AudioContext": "Resume AudioContext",
      "Return value": "Return value",
      "Run Current File": "Run the current file",
      "Run Script: {0}": "Run script: {0}",
      "Run for a specific amount of time": "Execute for a specific duration",
      "Run until a specific breakpoint is hit": "Execute until a specific breakpoint is hit.",
      "Run until manually stopped": "Run until manually stopped",
      "Saving": "Saving",
      "Script": "Script",
      "Script Blocked by Content Security Policy": "Script blocked by content security policy.",
      "Script First Statement": "The first statement of the script",
      "Select a tab": "Select a tab",
      "Select current working directory for new terminal": "Select the current working directory for the new terminal.",
      "Select test configuration to run": "Select the test configuration to run.",
      "Select the page where you want to open the devtools": "Select the page where you want to open the DevTools.",
      "Select the session you want to inspect:": "Select the session you want to inspect:",
      "Seller Reporting Phase Start": "Start of the seller reporting phase.",
      "Seller Scoring Phase Start": "Beginning of the seller scoring phase",
      "Set innerHTML": "Set innerHTML",
      "Skipped by skipFiles": "Skipped due to skipFiles.",
      "Skipped by smartStep": "Skipped by smartStep.",
      "Some breakpoints might not work in your version of Node.js. We recommend upgrading for the latest bug, performance, and security fixes. Details: https://aka.ms/AAcsvqm": "Some breakpoints may not work in your version of Node.js. We recommend upgrading to get the latest bug, performance, and security fixes. Details: https://aka.ms/AAcsvqm",
      "Source not a source map": "The source is not a source map.",
      "Source not found": "Source not found.",
      "Stack frame not found": "Stack frame not found.",
      "Starting profile...": "Starting profile...",
      "Stopping profile...": "Stopping profile...",
      "Suspend AudioContext": "Pause AudioContext",
      "Syntax error setting breakpoint with condition {0} on line {1}: {2}": "Syntax error while setting breakpoint with condition {0} on line {1}: {2}",
      "Target page not found. You may need to update your \"urlFilter\" to match the page you want to debug.": "The target page was not found. You may need to update the \"urlFilter\" setting to match the page you want to debug.",
      "The Node version in \"{0}\" is outdated (version {1}), we require at least Node 8.x.": "The Node version in \"{0}\" is outdated (version {1}). Node 8.x or higher version is required.",
      "The URL provided is invalid": "The provided URL is invalid.",
      "The browser process exited with code {0} before connecting to the debug server. Make sure the `runtimeExecutable` is configured correctly and that it can run without errors.": "The browser process has exited with code {0} before connecting to the debug server. Make sure that \"runtimeExecutable\" is configured correctly and can be executed without errors.",
      "The configured `cwd` {0} does not exist.": "The configured cwd {0} does not exist.",
      "The configured `cwd` {0} is not a folder.": "The configured 'cwd' {0} is not a folder.",
      "This is a missing file path referenced by a sourcemap. Would you like to debug the compiled version instead?": "This is a missing file path referenced by a sourcemap. Would you like to debug the compiled version instead?",
      "Thread is not paused": "The thread is not paused.",
      "Thread is not paused on exception": "The thread is not paused on exception.",
      "Thread not found": "Thread not found.",
      "Type of profile": "Profile Type",
      "URL contains \"{0}\"": "The URL contains \"{0}\"",
      "UWP webview debugging is not available on your platform.": "Debugging the UWP web view is not available on your platform.",
      "Unable to attach to browser": "Unable to attach to the browser.",
      "Unable to evaluate": "Cannot evaluate.",
      "Unable to evaluate on async stack frame": "Evaluation in an asynchronous stack frame cannot be performed.",
      "Unable to find an installation of the browser on your system. Try installing it, or providing an absolute path to the browser in the \"runtimeExecutable\" in your launch.json.": "The browser installation could not be found on your system. Try installing it or provide the absolute path to the browser in the \"runtimeExecutable\" parameter in your launch.json file.",
      "Unable to find {0} version {1}. Available auto-discovered versions are: {2}. You can set the \"runtimeExecutable\" in your launch.json to one of these, or provide an absolute path to the browser executable.": "Unable to find {0} version {1}. Available automatically detected versions are: {2}. You can set \"runtimeExecutable\" to one of these versions in your launch.json file or provide an absolute path to the browser executable.",
      "Unable to launch browser: \"{0}\"": "Unable to start browser: \"{0}\".",
      "Unable to pause": "Unable to pause.",
      "Unable to pretty print": "Unable to perform pretty print.",
      "Unable to resume": "Unable to resume.",
      "Unable to retrieve source content": "Unable to retrieve source content.",
      "Unable to set variable value": "The variable value cannot be set.",
      "Unable to step in": "Unable to step in.",
      "Unable to step next": "It is not possible to step to the next.",
      "Unable to step out": "Unable to step out.",
      "Unbound breakpoint": "Unbound breakpoint",
      "Uncaught Exceptions": "Uncaught exceptions",
      "Unknown error": "Unknown error",
      "VS Code can provide better debugging experience for WebAssembly via \"DWARF Debugging\" extension. Would you like to install it?/\"DWARF Debugging\" is the extension name and should not be localized.": "VS Code can provide better debugging experience for WebAssembly through the \"DWARF Debugging\" extension. Would you like to install it?",
      "Variable not found": "Variable not found",
      "Variables not available in async stacks": "Variables are not available in asynchronous stacks.",
      "WARNING: Processing source-maps of {0} took longer than {1} ms so we continued execution without waiting for all the breakpoints for the script to be set.": "WARNING: Processing source maps of {0} took longer than {1} ms, so we continued execution without waiting for all script breakpoints to be set.",
      "We can't launch a browser in debug mode from here. If you want to debug this webpage, open this workspace from VS Code on your desktop.": "We cannot launch a browser in debug mode from here. If you want to debug this web page, open this workspace from VS Code on your desktop.",
      "We can't launch a browser in debug mode from here. Open this workspace in VS Code on your desktop to enable debugging.": "We cannot launch a browser in debug mode from here. Open this workspace in VS Code on your desktop to enable debugging.",
      "WebGL Error Fired": "WebGL error triggered.",
      "WebGL Warning Fired": "WebGL warning triggered",
      "With Block": "With Block",
      "Would you like to save a configuration in your launch.json for easy access later?": "Would you like to save the configuration to the launch.json file for easy access later?",
      "XHR/Fetch URLs": "URLs for XHR/Fetch, XHR/Fetch URLs, XHR/capture URL, XHR/fetch URL, XHR/retrieval URL, XHR/フェッチ URL, XHR/fetch URL, XHR/download URLs, URLs for XHR/Fetch, XHR/Fëtçh ÜR£s, URL addresses for XHR/Fetch, XHR/Get URLs, XHR/fetch URL, XHR/提取 URL, XHR/擷取 URL.",
      "Yes": "Yes",
      "You may install the `{}` module via npm for enhanced WebAssembly debugging": "You can install the module '{}' via npm for enhanced WebAssembly debugging.",
      "You need to open a workspace folder to debug npm scripts.": "To debug npm scripts, you need to open a workspace folder.",
      "You're running an outdated version of Node.js. We recommend upgrading for the latest bug, performance, and security fixes.": "You are running an outdated version of Node.js. We recommend upgrading to get the latest bug, performance, and security fixes.",
      "an old debug session": "old debugging session",
      "breakpoint.provisionalBreakpoint": "breakpoint.provisionalBreakpoint",
      "path does not exist": "The path does not exist.",
      "process id: {0} ({1})": "Process ID: {0} ({1})",
      "process id: {0}, debug port: {1} ({2})": "Process ID: {0}, Debug port: {1} ({2})",
      "setInterval fired": "setInterval method triggered",
      "setTimeout fired": "The setTimeout method was triggered.",
      "the configured userDataDir": "configured userDataDir",
      "{0} (couldn't describe: {1})": "{0} (description could not be provided: {1})",
      "{0} Click to Stop Profiling": "Click here to stop profiling.",
      "{0} Click to Stop Profiling ({1} sessions)": "Click to stop profiling ({1} sessions)",
      "{0} Click to Stop Profiling ({1})": "Click here to stop profiling ({1})."
    }
  }
}